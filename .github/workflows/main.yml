name: Build Windows EXE

on:
  workflow_dispatch:
    inputs:
      entrypoint:
        description: 'Path to your Python entry file in THIS branch (e.g., src\main.py)'
        required: true
        default: ''

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install requirements and tools
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path requirements.txt) { pip install -r requirements.txt } else { Write-Host "No requirements.txt found â€” continuing." }
          pip install pyinstaller pyinstaller-hooks-contrib
          try { python -c "import PyQt5" } catch { pip install PyQt5 }

      - name: Compile Qt resources if .qrc exists
        shell: pwsh
        run: |
          $qrcs = @(Get-ChildItem -Recurse -Filter *.qrc)
          foreach ($q in $qrcs) {
            $out = Join-Path $q.DirectoryName 'resources_rc.py'
            python -m PyQt5.pyrcc_main $q.FullName -o $out
            Write-Host "Generated $out"
          }
          # Ensure a resources_rc.py sits next to the entrypoint if one exists anywhere
          $entry = '${{ github.event.inputs.entrypoint }}'
          $entryDir = Split-Path $entry -Parent
          if ($entryDir -and $qrcs.Count -gt 0) {
            $target = Join-Path $entryDir 'resources_rc.py'
            if (-not (Test-Path $target)) {
              python -m PyQt5.pyrcc_main $qrcs[0].FullName -o $target
              Write-Host "Also generated $target for 'import resources_rc'."
            }
          }

      - name: Build EXE
        shell: pwsh
        run: |
          $ENTRY='${{ github.event.inputs.entrypoint }}'
          if (-not (Test-Path $ENTRY)) { Write-Error "Entry file '$ENTRY' not found in this branch. Fix the path and re-run."; }
          $addData = @()
          if (Test-Path .\images) { $addData += '--add-data'; $addData += 'images;images' }
          pyinstaller --noconfirm --windowed --onefile `
            --name App `
            --hidden-import PyQt5.sip `
            --hidden-import PyQt5.QtCore `
            --hidden-import PyQt5.QtGui `
            --hidden-import PyQt5.QtWidgets `
            --hidden-import resources_rc `
            @addData `
            "$ENTRY"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-windows
          path: dist\*.exe
